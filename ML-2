import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler

# Step 1: Load Dataset
df = pd.read_csv('/content/credit_scoring.csv')
print("Original Dataset:")
print(df.head())

# Step 2: Check for missing values
print("\nMissing Values:")
print(df.isnull().sum())

# Step 3: Drop irrelevant columns (like ID)
df.drop(columns=['ID'], inplace=True)

# Step 4: Drop rows with missing values
df.dropna(inplace=True)

# Step 5: Define features and target
X = df.drop('Default', axis=1)
y = df['Default']

# Step 6: Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 7: Split into train-test sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Step 8: Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 9: Predict on test set
y_pred = model.predict(X_test)

# Step 10: Evaluate model
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print(f"\nModel Evaluation:\nMSE: {mse:.4f}, RMSE: {rmse:.4f}, RÂ² Score: {r2:.4f}")

# Step 11: Residual Plot
residuals = y_test - y_pred
plt.figure(figsize=(10,6))
sns.scatterplot(x=y_pred, y=residuals)
plt.axhline(0, color='red', linestyle='--')
plt.xlabel("Predicted Values")
plt.ylabel("Residuals")
plt.title("Residual Plot")
plt.show()
